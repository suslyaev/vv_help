#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è organization –≤ –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞.

–ó–∞–ø—É—Å–∫:
python fill_organizations.py

–ò–ª–∏ —á–µ—Ä–µ–∑ Django shell:
python manage.py shell < fill_organizations.py
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'vv_help_system.settings')
django.setup()

from tickets.models import Ticket, Client, Organization
from django.db import transaction

def fill_organizations():
    """–ó–∞–ø–æ–ª–Ω—è–µ—Ç –ø–æ–ª–µ organization –≤ –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö –∏–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    
    print("üîç –ù–∞—á–∏–Ω–∞–µ–º –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤ –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö...")
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è –±–µ–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
    tickets_without_org = Ticket.objects.filter(organization__isnull=True)
    total_tickets = tickets_without_org.count()
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–π –±–µ–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {total_tickets}")
    
    if total_tickets == 0:
        print("‚úÖ –í—Å–µ –æ–±—Ä–∞—â–µ–Ω–∏—è —É–∂–µ –∏–º–µ—é—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é!")
        return
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    updated_count = 0
    skipped_count = 0
    errors = []
    
    with transaction.atomic():
        for ticket in tickets_without_org:
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∫–ª–∏–µ–Ω—Ç–∞ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è
                if ticket.client and ticket.client.organization:
                    old_org = ticket.organization
                    ticket.organization = ticket.client.organization
                    ticket.save()
                    updated_count += 1
                    
                    print(f"‚úÖ #{ticket.id}: {ticket.client.name} ‚Üí {ticket.client.organization.name}")
                else:
                    skipped_count += 1
                    print(f"‚è≠Ô∏è  #{ticket.id}: {ticket.client.name if ticket.client else '–ë–µ–∑ –∫–ª–∏–µ–Ω—Ç–∞'} (–Ω–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —É –∫–ª–∏–µ–Ω—Ç–∞)")
                    
            except Exception as e:
                error_msg = f"‚ùå #{ticket.id}: –û—à–∏–±–∫–∞ - {str(e)}"
                errors.append(error_msg)
                print(error_msg)
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    print("\n" + "="*50)
    print("üìà –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–π: {updated_count}")
    print(f"‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω–æ –æ–±—Ä–∞—â–µ–Ω–∏–π: {skipped_count}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {len(errors)}")
    
    if errors:
        print("\nüö® –û–®–ò–ë–ö–ò:")
        for error in errors:
            print(f"   {error}")
    
    print("\nüéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    remaining_without_org = Ticket.objects.filter(organization__isnull=True).count()
    print(f"üìä –û—Å—Ç–∞–ª–æ—Å—å –æ–±—Ä–∞—â–µ–Ω–∏–π –±–µ–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {remaining_without_org}")

def show_statistics():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è–º –≤ –æ–±—Ä–∞—â–µ–Ω–∏—è—Ö"""
    
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ü–û –û–†–ì–ê–ù–ò–ó–ê–¶–ò–Ø–ú:")
    
    total_tickets = Ticket.objects.count()
    tickets_with_org = Ticket.objects.filter(organization__isnull=False).count()
    tickets_without_org = total_tickets - tickets_with_org
    
    print(f"üìã –í—Å–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏–π: {total_tickets}")
    print(f"‚úÖ –° –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–µ–π: {tickets_with_org}")
    print(f"‚ùå –ë–µ–∑ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏: {tickets_without_org}")
    
    # –¢–æ–ø –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –ø–æ –æ–±—Ä–∞—â–µ–Ω–∏—è–º
    from django.db.models import Count
    top_orgs = (Ticket.objects
                .filter(organization__isnull=False)
                .values('organization__name')
                .annotate(count=Count('id'))
                .order_by('-count')[:5])
    
    print("\nüèÜ –¢–û–ü-5 –û–†–ì–ê–ù–ò–ó–ê–¶–ò–ô –ü–û –û–ë–†–ê–©–ï–ù–ò–Ø–ú:")
    for org_data in top_orgs:
        print(f"   {org_data['organization__name']}: {org_data['count']} –æ–±—Ä–∞—â–µ–Ω–∏–π")

if __name__ == "__main__":
    print("üöÄ –°–ö–†–ò–ü–¢ –ó–ê–ü–û–õ–ù–ï–ù–ò–Ø –û–†–ì–ê–ù–ò–ó–ê–¶–ò–ô –í –û–ë–†–ê–©–ï–ù–ò–Ø–•")
    print("="*50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    show_statistics()
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print("\n‚ùì –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ? (y/N): ", end="")
    if len(sys.argv) > 1 and sys.argv[1] == "--yes":
        confirm = "y"
        print("y (–∞–≤—Ç–æ–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ)")
    else:
        confirm = input().strip().lower()
    
    if confirm in ['y', 'yes', '–¥–∞', '–¥']:
        fill_organizations()
        show_statistics()
    else:
        print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
